{"version":3,"sources":["App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["App","showWelcome","setShowWelcome","useState","currentMessageIndex","setCurrentMessageIndex","showConfetti","setShowConfetti","showTeddy","setShowTeddy","showDecorations","setShowDecorations","password","setPassword","isAuthenticated","setIsAuthenticated","recipientName","setRecipientName","theme","setTheme","flipped","setFlipped","isMusicPlaying","setIsMusicPlaying","isGluePlaying","setIsGluePlaying","audioRef","useRef","glueAudioRef","welcomeMessages","useMemo","text","concat","type","momentPoems","momentFronts","icon","useEffect","current","play","then","catch","error","console","log","welcomeSequenceDuration","length","decorationsTimer","setTimeout","teddyTimer","messageTimer","setInterval","prevIndex","clearInterval","finalTimer","pause","currentTime","clearTimeout","handleLogin","lowerPassword","toLowerCase","alert","_jsxs","className","children","_jsx","ref","src","process","loop","_Fragment","onClick","toggleMusic","title","slice","map","msg","index","Array","_","i","style","Math","random","toggleGlueMusic","front","idx","f","fill","v","cursor","alt","value","onChange","e","target","onKeyPress","key","placeholder","Boolean","window","location","hostname","match","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","React","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.878b7531.chunk.js","sourcesContent":["import React, { useState, useEffect, useMemo, useRef } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [showWelcome, setShowWelcome] = useState(true);\n  const [currentMessageIndex, setCurrentMessageIndex] = useState(0);\n  const [showConfetti, setShowConfetti] = useState(false);\n  const [showTeddy, setShowTeddy] = useState(false);\n  const [showDecorations, setShowDecorations] = useState(false);\n  const [password, setPassword] = useState('');\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [recipientName, setRecipientName] = useState('');\n  const [theme, setTheme] = useState('pink'); // default theme\n  const [flipped, setFlipped] = useState([false, false, false]);\n  const [isMusicPlaying, setIsMusicPlaying] = useState(false);\n  const [isGluePlaying, setIsGluePlaying] = useState(false);\n\n  const audioRef = useRef(null);\n  const glueAudioRef = useRef(null);\n\n  const welcomeMessages = useMemo(() => {\n    if (!recipientName) return [];\n    return [\n      {\n        text: `✨ To the incredible ${recipientName} ✨`,\n        type: \"title\"\n      },\n      {\n        text: \"On your special day,\",\n        type: \"message\"\n      },\n      {\n        text: \"May it be filled with moments\",\n        type: \"message\"\n      },\n      {\n        text: \"as bright and beautiful as you are.\",\n        type: \"message\"\n      },\n      {\n        text: \"Wishing you success, joy, and endless possibilities.\",\n        type: \"message\"\n      },\n      {\n        text: \"Let the celebrations begin! 🎉\",\n        type: \"highlight\"\n      }\n    ];\n  }, [recipientName]);\n\n  // Poetry/greetings for the back of each card\n  const momentPoems = [\n    \"May your cake be sweet, your laughter bright,\\nA year of joy from morning to night!\",\n    \"Gifts of love and memories new,\\nCountless reasons to celebrate you!\",\n    \"Dreams that sparkle, hopes that soar,\\nEndless magic, forevermore!\",\n    `Happy Birthday, Shreya!\\nWishing you a day filled with happiness and a year full of success.\\nYou're smart, kind, and truly amazing—never stop shining!\\nKeep exploring the wonders of science and keep being the awesome person you are.\\nHave a fantastic birthday! 🎂\\n\\n— Minato (The Yellow Flash)`\n  ];\n\n  // Card front content\n  const momentFronts = [\n    { icon: \"🎂\", text: \"Another year of amazing memories\" },\n    { icon: \"🎁\", text: \"Countless reasons to celebrate\" },\n    { icon: \"✨\", text: \"Endless possibilities ahead\" },\n    { icon: \"⚡\", text: \"Blessings by Minato (The Yellow Flash)\" }\n  ];\n\n  // Function to toggle music\n  const toggleMusic = () => {\n    if (audioRef.current) {\n      if (isMusicPlaying) {\n        audioRef.current.pause();\n        setIsMusicPlaying(false);\n      } else {\n        audioRef.current.play();\n        setIsMusicPlaying(true);\n      }\n    }\n  };\n\n  // Function to toggle glue song\n  const toggleGlueMusic = () => {\n    if (glueAudioRef.current) {\n      if (isGluePlaying) {\n        glueAudioRef.current.pause();\n        setIsGluePlaying(false);\n      } else {\n        glueAudioRef.current.play();\n        setIsGluePlaying(true);\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      // Play background music on authentication\n      if (audioRef.current) {\n        audioRef.current.play().then(() => setIsMusicPlaying(true)).catch(error => console.log(\"Autoplay prevented:\", error));\n      }\n\n      const welcomeSequenceDuration = 2000 * welcomeMessages.length + 4000; // Message delay * num messages + buffer\n\n      const decorationsTimer = setTimeout(() => {\n        setShowDecorations(true);\n      }, 500);\n\n      const teddyTimer = setTimeout(() => {\n        setShowTeddy(true);\n      }, 1000);\n\n      const messageTimer = setInterval(() => {\n        setCurrentMessageIndex((prevIndex) => {\n          if (prevIndex >= welcomeMessages.length - 1) {\n            clearInterval(messageTimer);\n            setShowConfetti(true);\n            return prevIndex;\n          }\n          return prevIndex + 1;\n        });\n      }, 2000); // SLOWER: 2 seconds per message\n\n      const finalTimer = setTimeout(() => {\n        setShowWelcome(false);\n        if (audioRef.current) {\n          audioRef.current.pause();\n          audioRef.current.currentTime = 0; // Rewind for next time\n        }\n      }, welcomeSequenceDuration);\n\n      return () => {\n        clearInterval(messageTimer);\n        clearTimeout(finalTimer);\n        clearTimeout(teddyTimer);\n        clearTimeout(decorationsTimer);\n        if (audioRef.current) {\n           audioRef.current.pause();\n        }\n      };\n    }\n  }, [isAuthenticated, showWelcome, welcomeMessages.length, welcomeMessages]); // Added welcomeMessages as dependency\n\n  // Play glue song when welcome overlay is dismissed\n  useEffect(() => {\n    if (!showWelcome && isAuthenticated) {\n      // Pause birthday song\n      if (audioRef.current) {\n        audioRef.current.pause();\n        setIsMusicPlaying(false);\n      }\n      // Play glue song\n      if (glueAudioRef.current) {\n        glueAudioRef.current.play().then(() => setIsGluePlaying(true)).catch(() => {});\n      }\n    } else {\n      // Pause glue song if not on main page\n      if (glueAudioRef.current) {\n        glueAudioRef.current.pause();\n        setIsGluePlaying(false);\n      }\n    }\n  }, [showWelcome, isAuthenticated]);\n\n  const handleLogin = () => {\n    const lowerPassword = password.toLowerCase();\n    if (lowerPassword === 'cats') {\n      setRecipientName('Shreya');\n      setTheme('pink');\n      setIsAuthenticated(true);\n    } else if (lowerPassword === 'aunty') {\n      setRecipientName('Tejas');\n      setTheme('blue');\n      setIsAuthenticated(true);\n    } else {\n      alert('Incorrect password. Please try again.');\n      setPassword('');\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      handleLogin();\n    }\n  };\n\n  return (\n    <div className={`birthday-bg ${theme}-theme`}>\n       <audio ref={audioRef} src={`${process.env.PUBLIC_URL}/birthday_song.mp3`} loop />\n       <audio ref={glueAudioRef} src={`${process.env.PUBLIC_URL}/glue_song.mp3`} loop />\n      {!isAuthenticated ? (\n        <div className=\"password-screen\">\n          <h2>Enter Password</h2>\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            onKeyPress={handleKeyPress}\n            placeholder=\"Password\"\n          />\n          <button onClick={handleLogin}>Enter</button>\n        </div>\n      ) : (\n        <>\n          {showWelcome && (\n            <div className=\"welcome-overlay\">\n              {showDecorations && (\n                <>\n                  <div className=\"decoration star1\">⭐</div>\n                  <div className=\"decoration star2\">⭐</div>\n                  <div className=\"decoration heart1\">💖</div>\n                  <div className=\"decoration heart2\">💖</div>\n                  <div className=\"decoration sparkle1\">✨</div>\n                  <div className=\"decoration sparkle2\">✨</div>\n                </>\n              )}\n              <div className=\"welcome-content\">\n                <div className=\"happy-birthday-title\">🎉 Happy Birthday! 🎉</div>\n                <div className=\"music-toggle-btn-wrapper\">\n                  <button className=\"music-toggle-btn\" onClick={toggleMusic} title={isMusicPlaying ? 'Pause Music' : 'Play Music'}>\n                    {isMusicPlaying ? '🎵 Pause Music' : '🎵 Play Music'}\n                  </button>\n                </div>\n                {welcomeMessages.slice(0, currentMessageIndex + 1).map((msg, index) => (\n                  <div\n                    key={index}\n                    className={`welcome-message ${msg.type} ${index === currentMessageIndex ? 'active' : ''}`}\n                  >\n                    {msg.text}\n                  </div>\n                ))}\n                {showTeddy && (\n                  <div className=\"teddy-container\">\n                    <div className=\"teddy\">\n                      <div className=\"teddy-face\">\n                        <div className=\"teddy-eyes\">\n                          <div className=\"teddy-eye left\"></div>\n                          <div className=\"teddy-eye right\"></div>\n                        </div>\n                        <div className=\"teddy-nose\"></div>\n                        <div className=\"teddy-mouth\"></div>\n                      </div>\n                      <div className=\"teddy-ears\">\n                        <div className=\"teddy-ear left\"></div>\n                        <div className=\"teddy-ear right\"></div>\n                      </div>\n                      <div className=\"teddy-bow\"></div>\n                    </div>\n                  </div>\n                )}\n                {showConfetti && (\n                  <div className=\"confetti-container\">\n                    {[...Array(30)].map((_, i) => (\n                      <div key={i} className=\"confetti\" style={{\n                        '--delay': `${Math.random() * 2}s`,\n                        '--x': `${Math.random() * 100}vw`,\n                        '--color': `hsl(${Math.random() * 360}, 100%, 50%)`\n                      }} />\n                    ))}\n                  </div>\n                )}\n                {showConfetti && (\n                  <button className=\"continue-btn\" onClick={() => setShowWelcome(false)}>\n                    Continue\n                  </button>\n                )}\n              </div>\n            </div>\n          )}\n          {!showWelcome && (\n            <div className=\"main-content\">\n              <header className=\"birthday-header\">\n                <h1>{`🎀 Happy Birthday, ${recipientName}! 🎀`}</h1>\n                <p className=\"subtitle\">Wishing you a day as magical as your favorite book! 💕</p>\n              </header>\n              <div className=\"music-toggle-btn-wrapper\">\n                <button className=\"music-toggle-btn\" onClick={toggleGlueMusic} title={isGluePlaying ? 'Pause Music' : 'Play Music'}>\n                  {isGluePlaying ? '🎵 Pause Music' : '🎵 Play Music'} (Glue Song)\n                </button>\n              </div>\n              <section className=\"birthday-highlights\">\n                <h2 className=\"section-title\">💖 Birthday Blessings 💖</h2>\n                <div className=\"moment-grid simple-grid\">\n                  {momentFronts.map((front, idx) => (\n                    <div\n                      key={idx}\n                      className={`moment-card flip-card${flipped[idx] ? ' flipped' : ''}`}\n                      onClick={() => setFlipped(f => {\n                        // Expand flipped array if needed\n                        if (f.length < momentFronts.length) {\n                          return Array(momentFronts.length).fill(false).map((v, i) => i === idx ? !v : v);\n                        }\n                        return f.map((v, i) => i === idx ? !v : v);\n                      })}\n                      style={{ cursor: 'pointer' }}\n                    >\n                      <div className=\"flip-card-inner\">\n                        <div className=\"flip-card-front\">\n                          <span className=\"moment-icon\">{front.icon}</span>\n                          <div className=\"moment-text\">{front.text}</div>\n                        </div>\n                        <div className=\"flip-card-back\">\n                          <div className=\"moment-poem\">{momentPoems[idx]}</div>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </section>\n\n              <section className=\"gallery\">\n                <h2 className=\"section-title\">🌸 Cherished Memories 🌸</h2>\n                <div className=\"gallery-grid simple-grid\">\n                  <div className=\"gallery-item simple-card\">\n                    <img className=\"gallery-img real-photo\" src={process.env.PUBLIC_URL + '/memories/memory1.jpg'} alt=\"Memory 1\" />\n                  </div>\n                  <div className=\"gallery-item simple-card\">\n                    <img className=\"gallery-img real-photo\" src={process.env.PUBLIC_URL + '/memories/memory2.jpg'} alt=\"Memory 2\" />\n                  </div>\n                  <div className=\"gallery-item simple-card\">\n                    <img className=\"gallery-img real-photo\" src={process.env.PUBLIC_URL + '/memories/memory3.jpg'} alt=\"Memory 3\" />\n                  </div>\n                </div>\n              </section>\n\n              <section className=\"birthday-wishes\">\n                <div className=\"wish-card\">\n                  <h2>💌 Birthday Wishes 💌</h2>\n                  <p className=\"wish-message\">\n                    May your day be filled with joy, laughter, and all the things that make you smile.\n                    You deserve all the happiness in the world!\n                  </p>\n                  <div className=\"wish-blessing blessing1\">\n                    <div className=\"wish-blessing-label\">Blessings by Minato (The Yellow Flash)</div>\n                    <div className=\"wish-blessing-message\">\n                      Happy Birthday, Shreya!<br/>\n                      Wishing you a day filled with happiness and a year full of success.<br/>\n                      You're smart, kind, and truly amazing—never stop shining!<br/>\n                      Keep exploring the wonders of science and keep being the awesome person you are.<br/>\n                      Have a fantastic birthday! 🎂\n                    </div>\n                  </div>\n                  <div className=\"wish-blessing blessing2\">\n                    <div className=\"wish-blessing-message\">\n                      Hey shreya 💗. Happy Birthday to you.🌟  Cutiee, I wish you best for your new age. And achieve the things you like. 🤍✨. Just wishing for your best 🥰. HAPPY BIRTHDAY AGAIN 🎉 🎉. LOVE YOU ❤️\n                    </div>\n                    <div className=\"wish-blessing-sender\">— pervi sketch aka prachi</div>\n                  </div>\n                  <div className=\"wish-blessing blessing3\">\n                    <div className=\"wish-blessing-message\">\n                      Happy birthday to you, Shreya,<br/>\n                      May your dreams shine bright like stars above,<br/>\n                      Wrapped in joy, laughter, and endless love.\n                    </div>\n                    <div className=\"wish-blessing-sender\">— anonymous aka spidey</div>\n                  </div>\n                  <div className=\"wish-blessing blessing4\">\n                    <div className=\"wish-blessing-message\">\n                      Happy Birthday my dear little spiritual cupcake 💖✨<br/>\n                      I hope you enjoy the day 🥰<br/>\n                      I'm waiting for your birthday party 🥳 🎉<br/>\n                      (And marriage invitation too🥳🎉🥰)\n                    </div>\n                    <div className=\"wish-blessing-sender\">— otaku aka ascender grey</div>\n                  </div>\n                  <div className=\"wish-blessing blessing5\">\n                    <div className=\"wish-blessing-message\">\n                      Happiest birthday shreya🎂🍫<br/>\n                      May God fullfill your life with cutie kitties🫡🐈<br/>\n                      May God give you lots of money so you can give me birthday party😑❤️\n                    </div>\n                    <div className=\"wish-blessing-sender\">— supering aka tejas</div>\n                  </div>\n                </div>\n              </section>\n\n              <footer className=\"footer\">\n                Made by Aadi\n              </footer>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}